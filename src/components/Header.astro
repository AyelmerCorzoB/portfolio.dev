---
import ThemeToggle from "./ThemeToggle.astro"

const navItems = [
  {
    title: "Proyectos",
    label: "proyectos",
    url: "/#proyectos",
  },
  {
    title: "Experiencia",
    label: "experiencia",
    url: "/#experiencia",
  },
  {
    title: "Sobre mí",
    label: "sobre-mi",
    url: "/#sobre-mi",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "mailto:corzobarbosaa@gmail.com",
  },
]
---

<header
  class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2"
>
<nav
  class="flex px-4 py-2 text-sm font-medium rounded-full justify-center items-center"
>
  <!-- Navegación principal -->
  {navItems.map((link) => (
    <a
      class="relative block px-3 py-2 transition text-gray-600 dark:text-gray-200 hover:text-yellow-400 dark:hover:text-yellow-400"
      aria-label={link.label}
      href={link.url}
    >
      {link.title}
    </a>
  ))}

  <!-- Botón de descarga de CV -->
  <a
    href="public/CV_Ayelmer_Corzo.pdf"
    download="CV_Ayelmer_Corzo.pdf"
    class="ml-4 inline-flex items-center gap-2 px-4 py-2 bg-yellow-400 text-gray-900 font-semibold rounded-full shadow-md hover:bg-yellow-500 hover:shadow-lg transition-all duration-300 transform hover:scale-105"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-5 w-5"
      viewBox="0 0 20 20"
      fill="currentColor"
    >
      <path
        fill-rule="evenodd"
        d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"
        clip-rule="evenodd"
      />
    </svg>
    <span>Descargar CV</span>
  </a>

  <!-- Botón de cambio de tema (opcional) -->
  <!-- <ThemeToggle /> -->
</nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-blue-500")
            } else {
              item.classList.remove("text-blue-500")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>
  nav {
  position: sticky;
  top: 0;
  z-index: 50;
  animation: nav-shadow 0.5s ease-out both;
  animation-timeline: scroll();
  animation-range: 0 100px;
}

@keyframes nav-shadow {
  0% {
    background-color: transparent; /* Sin fondo en la parte superior */
    box-shadow: none;
    backdrop-filter: none;
  }
  100% {
    background-color: rgba(49, 112, 170, 0.5); /* Fondo blanco semitransparente */
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); /* Sombra */
    backdrop-filter: blur(10px); /* Efecto de desenfoque */
  }
}

/* Estilos para el modo oscuro */
.dark nav {
  animation: nav-shadow-dark 0.5s ease-out both;
  animation-timeline: scroll();
  animation-range: 0 100px;
}

@keyframes nav-shadow-dark {
  0% {
    background-color: transparent; /* Sin fondo en la parte superior */
    box-shadow: none;
    backdrop-filter: none;
  }
  100% {
    background-color: rgba(31, 31, 224, 0.5); /* Fondo oscuro semitransparente */
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); 
    backdrop-filter: blur(10px); /* Efecto de desenfoque */
  }
}
</style>